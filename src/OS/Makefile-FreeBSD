# Exim: OS-specific make file for FreeBSD
# There's no setting of CFLAGS here, to allow the system default
# for "make" to be the default.

CHOWN_COMMAND=/usr/sbin/chown
STRIP_COMMAND=/usr/bin/strip
CHMOD_COMMAND=/bin/chmod

HAVE_SA_LEN=YES

# crypt() is in a separate library
LIBS=-lcrypt -lm -lutil

# Dynamically loaded modules need to be built with -fPIC
CFLAGS_DYNAMIC=-shared -rdynamic -fPIC

# FreeBSD always ships with Berkeley DB
USE_DB=yes

# This code for building outside ports suggested by Richard Clayton
.ifdef   X11BASE
X11=${X11BASE}
.elifdef LOCALBASE
X11=$(LOCALBASE)
.else
X11=/usr/local
.endif

# nb: FreeBSD is entirely elf; objformat was removed prior to FreeBSD 7
# http://www.freebsd.org/cgi/cvsweb.cgi/src/usr.bin/objformat/Attic/objformat.c
# deleted Jan 2007.
#
# So if this fails, you're on an ancient unsupported FreeBSD release *and*
# running GUI software, which seems both unusual and unwise.
#
# http://www.freebsd.org/doc/handbook/binary-formats.html suggests that the
# switch to default to ELF came with FreeBSD 3.  elf(5) claims ELF support
# introduced in FreeBSD 2.2.6.
#
XINCLUDE=-I$(X11)/include
XLFLAGS=-L$(X11)/lib -Wl,-rpath,${X11}/lib
X11_LD_LIB=$(X11)/lib

EXIWHAT_PS_ARG=-ax
EXIWHAT_EGREP_ARG='/exim( |$$)'
EXIWHAT_MULTIKILL_CMD='killall -m'
EXIWHAT_MULTIKILL_ARG='^exim($$|-[0-9.]+-[0-9]+$$)'
EXIWHAT_KILL_SIGNAL=-USR1

# End
