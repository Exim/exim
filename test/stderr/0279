Exim version x.yz ....
changed uid/gid: forcing real = effective
  uid=uuuu gid=CALLER_GID pid=p1234
seeking password data for user "CALLER": cache not available
getpwnam() succeeded uid=CALLER_UID gid=CALLER_GID
configuration file is TESTSUITE/test-config
trusted user
admin user
dropping to exim gid; retaining priv uid
seeking password data for user "CALLER": using cached result
getpwnam() succeeded uid=CALLER_UID gid=CALLER_GID
originator: uid=CALLER_UID gid=CALLER_GID login=CALLER name=
sender address = CALLER@test.ex
Address testing: uid=uuuu gid=EXIM_GID euid=uuuu egid=EXIM_GID
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Testing CALLER@test.ex
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Considering CALLER@test.ex
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
routing CALLER@test.ex
--------> rr1 router <--------
local_part=CALLER domain=test.ex
checking senders
CALLER@test.ex in senders?
 list element: user1@+funny_domains
 address match test: subject=CALLER@test.ex pattern=user1@+funny_domains
CALLER@test.ex in senders? no (end of list)
rr1 router skipped: senders mismatch
--------> r1 router <--------
local_part=CALLER domain=test.ex
checking senders
CALLER@test.ex in senders?
 list element: +never_addresses
  start sublist never_addresses
   CALLER@test.ex in "never@test.ex"?
   ╎list element: never@test.ex
   ╎address match test: subject=CALLER@test.ex pattern=never@test.ex
   CALLER@test.ex in "never@test.ex"? no (end of list)
  end sublist never_addresses
 list element: +n1_addresses
  start sublist n1_addresses
   CALLER@test.ex in "never1@test.ex"?
   ╎list element: never1@test.ex
   ╎address match test: subject=CALLER@test.ex pattern=never1@test.ex
   CALLER@test.ex in "never1@test.ex"? no (end of list)
  end sublist n1_addresses
 list element: !░+local_addresses
  start sublist local_addresses
   CALLER@test.ex in "CALLER@test.ex"?
   ╎list element: CALLER@test.ex
   ╎address match test: subject=CALLER@test.ex pattern=CALLER@test.ex
   ╎test.ex in "test.ex"?
   ╎ list element: test.ex
   ╎ test.ex in "test.ex"? yes (matched "test.ex")
   ╎CALLER@test.ex in "CALLER@test.ex"? yes (matched "CALLER@test.ex")
  end sublist local_addresses
 data from lookup saved for cache for +local_addresses: key 'CALLER@test.ex' value 'CALLER@test.ex'
 CALLER@test.ex in senders? no (matched "! +local_addresses")
r1 router skipped: senders mismatch
--------> r2 router <--------
local_part=CALLER domain=test.ex
checking senders
CALLER@test.ex in senders?
 list element: +never_addresses
  start sublist never_addresses
 cached no match for +never_addresses
 cached lookup data = NULL
 list element: +n2_addresses
  start sublist n2_addresses
   CALLER@test.ex in "<; never2@test.ex ; +n1_addresses"?
   ╎list element: never2@test.ex
   ╎address match test: subject=CALLER@test.ex pattern=never2@test.ex
   ╎list element: +n1_addresses
   ╎ start sublist n1_addresses
   ╎cached no match for +n1_addresses
   ╎cached lookup data = NULL
   CALLER@test.ex in "<; never2@test.ex ; +n1_addresses"? no (end of list)
  end sublist n2_addresses
 list element: !+local_addresses
  start sublist local_addresses
 cached yes match for +local_addresses
 cached lookup data = CALLER@test.ex
 CALLER@test.ex in senders? no (matched "!+local_addresses" - cached)
r2 router skipped: senders mismatch
--------> r3 router <--------
local_part=CALLER domain=test.ex
checking for local user
seeking password data for user "CALLER": using cached result
getpwnam() succeeded uid=CALLER_UID gid=CALLER_GID
checking senders
CALLER@test.ex in senders?
 list element: +local_addresses
  start sublist local_addresses
 cached yes match for +local_addresses
 cached lookup data = CALLER@test.ex
 CALLER@test.ex in senders? yes (matched "+local_addresses" - cached)
calling r3 router
r3 router called for CALLER@test.ex
  domain = test.ex
set transport t1
queued for t1 transport: local_part = CALLER
domain = test.ex
  errors_to=NULL
  domain_data=NULL local_part_data=CALLER
routed by r3 router
  envelope to: CALLER@test.ex
  transport: t1
search_tidyup called
>>>>>>>>>>>>>>>> Exim pid=p1234 (fresh-exec) terminating with rc=0 >>>>>>>>>>>>>>>>
Exim version x.yz ....
changed uid/gid: forcing real = effective
  uid=uuuu gid=CALLER_GID pid=p1235
seeking password data for user "CALLER": cache not available
getpwnam() succeeded uid=CALLER_UID gid=CALLER_GID
configuration file is TESTSUITE/test-config
trusted user
admin user
dropping to exim gid; retaining priv uid
seeking password data for user "CALLER": using cached result
getpwnam() succeeded uid=CALLER_UID gid=CALLER_GID
originator: uid=CALLER_UID gid=CALLER_GID login=CALLER name=
sender address = user1@fun.1
Address testing: uid=uuuu gid=EXIM_GID euid=uuuu egid=EXIM_GID
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Testing CALLER@test.ex
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Considering CALLER@test.ex
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
routing CALLER@test.ex
--------> rr1 router <--------
local_part=CALLER domain=test.ex
checking senders
user1@fun.1 in senders?
 list element: user1@+funny_domains
 address match test: subject=user1@fun.1 pattern=user1@+funny_domains
 fun.1 in "+funny_domains"?
  list element: +funny_domains
   start sublist funny_domains
   ╎fun.1 in "fun.1 : fun.2"?
   ╎ list element: fun.1
   ╎ fun.1 in "fun.1 : fun.2"? yes (matched "fun.1")
   end sublist funny_domains
  fun.1 in "+funny_domains"? yes (matched "+funny_domains")
 user1@fun.1 in senders? yes (matched "user1@+funny_domains")
calling rr1 router
rda_interpret (string): ':fail: matched *@+funny_domains'
expanded: ':fail: matched *@+funny_domains'
file is not a filter file
parse_forward_list: :fail: matched *@+funny_domains
extract item: :fail: matched *@+funny_domains
rr1 router forced address failure
search_tidyup called
>>>>>>>>>>>>>>>> Exim pid=p1235 (fresh-exec) terminating with rc=2 >>>>>>>>>>>>>>>>
